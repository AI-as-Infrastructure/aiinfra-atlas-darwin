# Deployment help targets
.PHONY: help-p help-dp help-s help-ds help-lts help-ltp help-ltq help-ltweb help-ltasync

help-p:
	@echo "Deploy to production"
	@echo "Usage: make p"
	@echo ""
	@echo "This target deploys the application to production:"
	@echo "1. Builds and deploys the frontend"
	@echo "2. Sets up the backend environment"
	@echo "3. Configures and starts production services"
	@echo ""
	@echo "Required:"
	@echo "- AWS credentials configured"
	@echo "- Production environment variables"

help-dp:
	@echo "Delete production environment"
	@echo "Usage: make dp"
	@echo ""
	@echo "This target removes the production deployment:"
	@echo "1. Stops all production services"
	@echo "2. Removes the application files"
	@echo "3. Cleans up systemd services"
	@echo ""
	@echo "WARNING: This will remove all production data!"

help-s:
	@echo "Deploy to staging"
	@echo "Usage: make s"
	@echo ""
	@echo "This target deploys the application to staging:"
	@echo "1. Builds and deploys the frontend"
	@echo "2. Sets up the backend environment"
	@echo "3. Configures and starts staging services"
	@echo ""
	@echo "Required:"
	@echo "- STAGING_IP environment variable"
	@echo "- STAGING_USER environment variable"

help-ds:
	@echo "Delete staging environment"
	@echo "Usage: make ds"
	@echo ""
	@echo "This target removes the staging deployment:"
	@echo "1. Stops all staging services"
	@echo "2. Removes the application files"
	@echo "3. Cleans up systemd services"
	@echo ""
	@echo "WARNING: This will remove all staging data!"

help-lts:
	@echo "Run load test against staging environment"
	@echo "Usage: make lts"
	@echo ""
	@echo "This target runs a comprehensive load test against staging:"
	@echo "1. Automatically creates virtual environment if needed"
	@echo "2. Installs dependencies from config/requirements.txt"
	@echo "3. Uses environment variables from config/.env.staging"
	@echo "4. Tests with 30 concurrent users for 15 minutes"
	@echo "5. Includes question submission, feedback, and WebSocket tests"
	@echo "6. Runs in headless mode and exports results"
	@echo ""
	@echo "Required:"
	@echo "- config/.env.staging file with VITE_API_URL configured"

help-ltp:
	@echo "Run load test against production environment"
	@echo "Usage: make ltp"
	@echo ""
	@echo "This target runs a conservative load test against production:"
	@echo "1. Automatically creates virtual environment if needed"
	@echo "2. Installs dependencies from config/requirements.txt"
	@echo "3. Uses environment variables from config/.env.production"
	@echo "4. Tests with 20 concurrent users for 10 minutes"
	@echo "5. Includes safety confirmation prompt"
	@echo "6. Runs in headless mode with reduced load"
	@echo ""
	@echo "Required:"
	@echo "- config/.env.production file with VITE_API_URL configured"
	@echo ""
	@echo "WARNING: This tests against production infrastructure!"

help-ltq:
	@echo "Quick smoke test against staging"
	@echo "Usage: make ltq"
	@echo ""
	@echo "This target runs a quick smoke test against staging:"
	@echo "1. Automatically creates virtual environment if needed"
	@echo "2. Installs dependencies from config/requirements.txt"
	@echo "3. Tests basic functionality with 5 users for 3 minutes"
	@echo "4. Perfect for CI/CD pipelines or quick validation"
	@echo "5. Always uses staging environment (config/.env.staging)"
	@echo "6. Minimal load to verify system health"
	@echo "7. Runs in headless mode (no web UI)"
	@echo ""
	@echo "Required:"
	@echo "- config/.env.staging file with VITE_API_URL configured"
	@echo "- VITE_USE_COGNITO_AUTH=false in config/.env.staging"

help-ltweb:
	@echo "Interactive load test with web UI (staging only)"
	@echo "Usage: make ltweb"
	@echo ""
	@echo "This target starts an interactive load test against staging:"
	@echo "1. Automatically creates virtual environment if needed"
	@echo "2. Installs dependencies from config/requirements.txt"
	@echo "3. Opens Locust web interface on http://localhost:8089"
	@echo "4. Allows manual control of user count and spawn rate"
	@echo "5. Real-time monitoring of performance metrics"
	@echo "6. Always uses staging environment (config/.env.staging)"
	@echo "7. Ideal for manual testing and analysis"
	@echo ""
	@echo "Required:"
	@echo "- config/.env.staging file with VITE_API_URL configured"
	@echo "- VITE_USE_COGNITO_AUTH=false in config/.env.staging"
	@echo ""
	@echo "Usage: Open http://localhost:8089 in your browser to control the test"

help-ltasync:
	@echo "Test async processing and Redis queue (staging only)"
	@echo "Usage: make ltasync"
	@echo ""
	@echo "This target tests async processing capabilities against staging:"
	@echo "1. Automatically creates virtual environment if needed"
	@echo "2. Installs dependencies from config/requirements.txt"
	@echo "3. Focuses on async endpoints and Redis queue performance"
	@echo "4. Tests with 15 concurrent users for 10 minutes"
	@echo "5. Always uses staging environment (config/.env.staging)"
	@echo "6. Monitors queue depth and processing times"
	@echo "7. Validates worker performance under load"
	@echo "8. Runs in headless mode (no web UI)"
	@echo ""
	@echo "Required:"
	@echo "- config/.env.staging file with REDIS_URL configured"
	@echo "- VITE_USE_COGNITO_AUTH=false in config/.env.staging"
	@echo "- Redis server running and accessible" 